/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 27 20:38:49 GMT 2023
 */

package org.apache.commons.mail;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.apache.commons.mail.ByteArrayDataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ByteArrayDataSource_ESTest extends ByteArrayDataSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      ByteArrayDataSource byteArrayDataSource0 = new ByteArrayDataSource(byteArrayInputStream0, "");
      assertEquals("", byteArrayDataSource0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayDataSource byteArrayDataSource0 = new ByteArrayDataSource(byteArray0, "");
      byteArrayDataSource0.setName((String) null);
      String string0 = byteArrayDataSource0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteArrayDataSource byteArrayDataSource0 = new ByteArrayDataSource("%3R-wTJFfv`s", "");
      byteArrayDataSource0.setName("no data");
      byteArrayDataSource0.getName();
      assertEquals("", byteArrayDataSource0.getContentType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteArrayDataSource byteArrayDataSource0 = new ByteArrayDataSource("", "");
      String string0 = byteArrayDataSource0.getContentType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteArrayDataSource byteArrayDataSource0 = null;
      try {
        byteArrayDataSource0 = new ByteArrayDataSource((byte[]) null, "application/octet-stream");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteArrayDataSource byteArrayDataSource0 = null;
      try {
        byteArrayDataSource0 = new ByteArrayDataSource(sequenceInputStream0, "k\"GhNyg~K[NZ__r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1285), 2161);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayDataSource byteArrayDataSource0 = null;
      try {
        byteArrayDataSource0 = new ByteArrayDataSource(dataInputStream0, "|gu*V");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayDataSource byteArrayDataSource0 = new ByteArrayDataSource(byteArray0, "JB'z");
      try { 
        byteArrayDataSource0.getInputStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.mail.ByteArrayDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayDataSource byteArrayDataSource0 = new ByteArrayDataSource(byteArray0, "short");
      byteArrayDataSource0.getOutputStream();
      InputStream inputStream0 = byteArrayDataSource0.getInputStream();
      assertEquals(0, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayDataSource byteArrayDataSource0 = new ByteArrayDataSource("", (String) null);
      String string0 = byteArrayDataSource0.getContentType();
      assertNotNull(string0);
      assertEquals("application/octet-stream", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteArrayDataSource byteArrayDataSource0 = null;
      try {
        byteArrayDataSource0 = new ByteArrayDataSource((String) null, "y4AxnwJo*9#UK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.mail.ByteArrayDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteArrayDataSource byteArrayDataSource0 = null;
      try {
        byteArrayDataSource0 = new ByteArrayDataSource((InputStream) null, "ZZW3_tUvyT<#6J.");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteArrayDataSource byteArrayDataSource0 = new ByteArrayDataSource("", (String) null);
      byteArrayDataSource0.getName();
      assertEquals("application/octet-stream", byteArrayDataSource0.getContentType());
  }
}
