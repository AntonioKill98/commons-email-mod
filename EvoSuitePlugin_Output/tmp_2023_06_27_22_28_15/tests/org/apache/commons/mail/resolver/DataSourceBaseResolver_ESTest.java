/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 27 20:49:19 GMT 2023
 */

package org.apache.commons.mail.resolver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import org.apache.commons.mail.resolver.DataSourceClassPathResolver;
import org.apache.commons.mail.resolver.DataSourceFileResolver;
import org.apache.commons.mail.resolver.DataSourceUrlResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataSourceBaseResolver_ESTest extends DataSourceBaseResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataSourceFileResolver dataSourceFileResolver0 = new DataSourceFileResolver();
      boolean boolean0 = dataSourceFileResolver0.isLenient();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataSourceClassPathResolver dataSourceClassPathResolver0 = new DataSourceClassPathResolver();
      boolean boolean0 = dataSourceClassPathResolver0.isHttpUrl("http://");
      assertFalse(dataSourceClassPathResolver0.isLenient());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataSourceClassPathResolver dataSourceClassPathResolver0 = new DataSourceClassPathResolver();
      boolean boolean0 = dataSourceClassPathResolver0.isHttpUrl("|Kz`)P]48_kx`");
      assertFalse(boolean0);
      assertFalse(dataSourceClassPathResolver0.isLenient());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      DataSourceUrlResolver dataSourceUrlResolver0 = new DataSourceUrlResolver(uRL0, true);
      dataSourceUrlResolver0.isFileUrl("file:/");
      assertTrue(dataSourceUrlResolver0.isLenient());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataSourceClassPathResolver dataSourceClassPathResolver0 = new DataSourceClassPathResolver(".");
      boolean boolean0 = dataSourceClassPathResolver0.isFileUrl("");
      assertFalse(boolean0);
      assertFalse(dataSourceClassPathResolver0.isLenient());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataSourceClassPathResolver dataSourceClassPathResolver0 = new DataSourceClassPathResolver("nYB~!sYPN5s P?");
      dataSourceClassPathResolver0.isCid("cid:zgN]?{1R3PE1<");
      assertFalse(dataSourceClassPathResolver0.isLenient());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataSourceClassPathResolver dataSourceClassPathResolver0 = new DataSourceClassPathResolver("y;[bn_Q{TO.G{$Aes.N", true);
      boolean boolean0 = dataSourceClassPathResolver0.isCid("");
      assertTrue(dataSourceClassPathResolver0.isLenient());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataSourceClassPathResolver dataSourceClassPathResolver0 = new DataSourceClassPathResolver("Q I&B~7%rm<S");
      // Undeclared exception!
      try { 
        dataSourceClassPathResolver0.isHttpUrl((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      DataSourceUrlResolver dataSourceUrlResolver0 = new DataSourceUrlResolver(uRL0, false);
      // Undeclared exception!
      try { 
        dataSourceUrlResolver0.isCid((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataSourceClassPathResolver dataSourceClassPathResolver0 = new DataSourceClassPathResolver("y;[bn_Q{TO.G{$Aes.N", true);
      boolean boolean0 = dataSourceClassPathResolver0.isLenient();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataSourceClassPathResolver dataSourceClassPathResolver0 = new DataSourceClassPathResolver("Unable to lo#ate ");
      dataSourceClassPathResolver0.resolve("https://");
      assertFalse(dataSourceClassPathResolver0.isLenient());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataSourceFileResolver dataSourceFileResolver0 = new DataSourceFileResolver();
      // Undeclared exception!
      try { 
        dataSourceFileResolver0.isFileUrl((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
