/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 27 20:50:08 GMT 2023
 */

package org.apache.commons.mail;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.mail.Email;
import org.apache.commons.mail.SimpleEmail;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleEmail_ESTest extends SimpleEmail_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      simpleEmail0.setStartTLSRequired(true);
      Email email0 = simpleEmail0.setMsg("MAmRUXND");
      assertSame(simpleEmail0, email0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      Email email0 = simpleEmail0.setStartTLSEnabled(true);
      Email email1 = simpleEmail0.setMsg("c+>");
      assertSame(email1, email0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      simpleEmail0.setSendPartial(true);
      Email email0 = simpleEmail0.setMsg("25");
      assertFalse(email0.isStartTLSEnabled());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      simpleEmail0.setSSLCheckServerIdentity(true);
      Email email0 = simpleEmail0.setMsg("*J[A%#'");
      assertTrue(email0.isSSLCheckServerIdentity());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      simpleEmail0.setSSLOnConnect(true);
      Email email0 = simpleEmail0.setMsg("|");
      assertEquals(60000, email0.getSocketTimeout());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      simpleEmail0.socketTimeout = 0;
      Email email0 = simpleEmail0.setMsg("465");
      assertFalse(email0.isSSLOnConnect());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      simpleEmail0.setSocketTimeout((-2735));
      Email email0 = simpleEmail0.setMsg("w");
      assertFalse(email0.isSSLCheckServerIdentity());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      simpleEmail0.setSocketConnectionTimeout(0);
      Email email0 = simpleEmail0.setMsg("UNf :g");
      assertSame(simpleEmail0, email0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      simpleEmail0.socketConnectionTimeout = (-1957);
      Email email0 = simpleEmail0.setMsg("S`:");
      assertFalse(email0.isSSLCheckServerIdentity());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SimpleEmail simpleEmail0 = new SimpleEmail();
      try { 
        simpleEmail0.setMsg("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid message supplied
         //
         verifyException("org.apache.commons.mail.SimpleEmail", e);
      }
  }
}
